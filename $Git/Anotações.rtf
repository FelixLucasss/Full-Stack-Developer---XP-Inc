{\rtf1\ansi\ansicpg1252\deff0\nouicompat\deflang1046{\fonttbl{\f0\fnil\fcharset0 Calibri;}{\f1\fnil\fcharset2 Symbol;}}
{\*\generator Riched20 10.0.19041}\viewkind4\uc1 
\pard\sa200\sl276\slmult1\f0\fs22\lang22 Anota\'e7\'f5es do BootCamp Full Stack Developer :\par
\par
O que vou aprender :\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 Backend com .NET (Principal tecnologia da Microsoft);\par
{\pntext\f1\'B7\tab}Frontend com React (Principal tecnologia do mercado);\par
{\pntext\f1\'B7\tab}Foco em Git e Github;\par
{\pntext\f1\'B7\tab}Programa\'e7\'e3o Orientada a Objetos com C#;\par
{\pntext\f1\'B7\tab}Introdu\'e7\'e3o a Banco de Dados (Relacionais e N\'c3O relacionais);\par
{\pntext\f1\'B7\tab}Contru\'e7\'e3o de APIs;\par
{\pntext\f1\'B7\tab}Introdu\'e7\'e3o com Cloud e Azure;\par

\pard\sa200\sl276\slmult1\par
\par
\par
\b\fs32 Introdu\'e7\'e3o ao .NET :\b0\fs22\par
Hist\'f3ria, vers\'f5es e usos : \par
\tab O .NET \'e9 uma plataforma de desenvolvimento unificado que permite a constru\'e7\'e3o de sistemas e aplica\'e7\'f5es, C# \'e9 uma linguagem de programa\'e7\'e3o usada no .NET.\line\tab\'c9 poss\'edvel utilizar em aplica\'e7\'f5es Desktop, aplicativos Web, solu\'e7\'f5es em Cloud, aplica\'e7\'f5es Mobile, aplica\'e7\'f5es em jogos com Unity, IoT, e Inteligencia Artificial. A principal IDE \'e9 a Visual Studio Code e o Command Line Interface (CMD). \line\tab O .NET \'e9 uma plataforma que utiliza principalmente o C#, F# e Visual Basic (VB).\par
\tab A Microsoft come\'e7ou a trabalhar no C# no final dos anos 90, para competir com o Java, pois o Java tinha o conceito de multiplataforma que o fez ganhar muita popularidade. Por\'e9m o .NET surgiu para facilitar o desenvolvimento de aplicativos para Windows ao inv\'e9s de foco em multiplataforma. para que fosse f\'e1cil desenvolver aplicativos desktop e web.\line\tab Come\'e7ou o desenvolvimento do .NET em 1998 e com a primeira vers\'e3o em 2002 junto com o Visual Studio, com sua vers\'e3o mais importante em .NET4, com o surgimento do .NET Core 1.0 sendo uma vers\'e3o multiplataforma em 2016. \par
\tab O .NET Framework \'e9 a vers\'e3o Legado, a vers\'e3o que s\'f3 funciona em Windows (.NET 4.8), j\'e1 a vers\'e3o .NET \'e9 a vers\'e3o .NET Core, a vers\'e3o que \'e9 multiplataforma (.NET 6 ou atual).  As partes compartilhadas entre eles s\'e3o as Runtimes, as bibliotecas e compiladores.\par
\tab Linguagem de alto n\'edvel \'e9 uma linguagem que entendemos e escrevemos nosso c\'f3digo fonte (De maneira legivel para o programador, onde \'e9 poss\'edvel entender do que se trata o c\'f3digo, ent\'e3o um compilador compila o c\'f3digo para uma linguagem de baixo n\'edvel ( Linguagem que a m\'e1quina entende, possui pouca abstra\'e7\'e3o, sendo dificil de entender. Assim como um c\'f3digo bin\'e1rio ).\par
\tab O funcionamento de um compilador .NET, voc\'ea cria um c\'f3digo C#, que passa para o compilador e os transforma em um c\'f3digo intermedi\'e1rio (IL Code ), um c\'f3digo independente de um\'e1 m\'e1quina, quase como um c\'f3digo abstrato com exe e dll, e com um compilador JIT ( Compila na hora que for executar ) durante o Runtime, e ent\'e3o converter para o c\'f3digo especifico da m\'e1quina.\line\tab Um compilador \'e9 o programa que realiza a convers\'e3o de uma linguagem de alto n\'edvel para uma linguagem de baixo n\'edvel. J\'e1 um Transpilador \'e9 a convers\'e3o de uma linguagem ou implementa\'e7\'e3o para outra, a sua sa\'edda permanece em alto n\'edvel ( Como exemplo Typescript para Javascript ). \line\tab Por\'e9m nem todas linguagens s\'e3o compiladas, linguagem compilada s\'e3o as que o c\'f3digo fonte \'e9 traduzido para o c\'f3digo da m\'e1quina ( C# e Java por exemplo ), j\'e1 uma linguagem interpretada s\'e3o as linguagens que fazem a leitura e interpreta\'e7\'e3o diretamente do c\'f3digo fonte ( Javascript e PHP ).\par
\par
\b Sintaxe e Indenta\'e7\'e3o :\par
\b0\tab Ao utilizar o comando dotnet new console, no console do VSCode, o .NET cria 2 pastas e 2 arquivos. O Program.cs (o Program \'e9 o nome da classe ), todo o arquivo de classe tem .cs. O Arquivo csproj \'e9 um arquivo de projeto do C#, que cont\'e9m informa\'e7\'f5es essenciais descritivas do projeto, os metadados. Tem a pasta obj, que s\'e3o arquivos de debug, e dificilmente ser\'e1 utilizado. E por fim a pasta bin, que \'e9 a pasta de bin\'e1rios, que \'e9 onde o c\'f3digo \'e9 compilado e transformado em bin\'e1rio. Essa \'e9 uma estrutura de projeto em .NET, que a classe inicial seria equivalente a parte incial do projeto, o arquivo de metadados que define como o projeto ir\'e1 se comportar o projeto, e 2 pastas que n\'e3o ser\'e1 necess\'e1rio mexer.\par
\tab Para entender uma "Classe", temos que entender que a classe \'e9 relacionada com conceito de abastra\'e7\'e3o com a Programa\'e7\'e3o Orientada a Objetos, uma abastra\'e7\'e3o \'e9 pegar um objeto do mundo real e transform\'e1-lo em um objeto da programa\'e7\'e3o para implementar no c\'f3digo (Exemplo, uma classe pode ser uma pessoa, que possui Nome, idade, CPF, etc. Essas caracter\'edsticas s\'e3o chamadas de atributos ). Ao contr\'e1rio do Java, \'e9 comum que todo nome de classe comece com a primeira letra maiuscula.\par
\b Cases : \par
\tab\b0 Existem jeitos diferentes de escrever os nomes das coisas, como camelCase, PascalCase, snake_case, e spinal-case (Escrevendo o nome das fun\'e7\'f5es e variaveis, do jeito que os cases s\'e3o mostrados).\par
\tab Geralmente, em nomes de classe, propriedade e fun\'e7\'e3o seria usado PascalCase.\par
\b Tipos de dados :\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1 String  : \b0 Uma s\'e9rie de caract\'e9ries ( Como palavras e endere\'e7os);\par
{\pntext\f1\'B7\tab}\b Char : \b0 Um conjunto de caract\'e9reies que formam uma s\'f3 coisa ( Como nomes );\par
{\pntext\f1\'B7\tab}\b Object : \b0\par
{\pntext\f1\'B7\tab}\b Bool : \b0 Valor de verdadeiro ou falso;\par
{\pntext\f1\'B7\tab}\b Byte : \b0 Valores entre 0 e 255;\par
{\pntext\f1\'B7\tab}\b Decimal : \b0 Para representar com 28-29 casas decimais;\par
{\pntext\f1\'B7\tab}\b Double : \b0 Representa valores decimais ainda mais precisos e grandes que float;\par
{\pntext\f1\'B7\tab}\b Int : \b0 Qualquer n\'famero inteiro que n\'e3o tenha casas decimais;\par
{\pntext\f1\'B7\tab}\b Float : \b0 Representa valores decimais extremamente grandes;\par
{\pntext\f1\'B7\tab}\b Long : \b0 Valores extremamente baixos at\'e9 extremamente altos;\par
{\pntext\f1\'B7\tab}\b Uint : \b0 Valores entre 0 e 4.294.967.295;\par
{\pntext\f1\'B7\tab}\b Short : \b0 Valores entre -32.768 e 32.767;\par
{\pntext\f1\'B7\tab}\b Ulong : \b0 Valor entre 0 e extremamente alto.\par
{\pntext\f1\'B7\tab}\b DateTime : \b0 Este tipo de dado representa datas e hor\'e1rios (Mostrando data, m\'eas, ano e hor\'e1rio )\par

\pard\sa200\sl276\slmult1\par
\b Para declarar vari\'e1veis :\par
\tab\b0 Para declarar uma v\'e1riavel, basta colocar o tipo de dado, nome da variavel, e o valor. Por exemplo \b\i String Nome = "Lucas"; \b0\i0 ou \b\i int Idade = 22; \b0\i0 e \b\i double Altura = 1.80; \b0\i0 e \b\i DateTime dataAtual = DateTime.Now;\par
\par
\i0 Operadores :\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0 O operador \b = \b0 apresenta atribui\'e7\'e3o\par

\pard\sa200\sl276\slmult1\tab Para converter tipos de vari\'e1veis, \'e9 poss\'edvel converter utilizando o \b\i Convert. \b0\i0 ou \b\i Parse \b0\i0 como por exemplo \b\i int a = Convert.ToInt32("5); \b0\i0\par
\tab  A diferen\'e7a entre Convert e Parese \'e9 o tratamento de Valores Nulos, onde Convert convert para valor 0 por exemplo, e Parse n\'e3o consegue converter;\par
\b Operadores condicionais :\par
\tab\b0 Utilizando por exemplo IF, ELSE IF e ELSE, \'e9 possivel criar condi\'e7\'f5es, onde se a condi\'e7\'e3o for verdadeira, executa um bloco de comandos, por\'e9m tamb\'e9m \'e9 poss\'edvel realizar uma situa\'e7\'e3o parecida utilizando switch e case, para quando existirem muitas condi\'e7\'f5es diferentes\par
\par
\b Operadores aritm\'e9ticos e classe Math :\par

\pard{\pntext\f1\'B7\tab}{\*\pn\pnlvlblt\pnf1\pnindent0{\pntxtb\'B7}}\fi-360\li720\sa200\sl276\slmult1\b0 O operador \b + soma os valores;\b0\par
{\pntext\f1\'B7\tab}O operador \b - Diminui os valores;\b0\par
{\pntext\f1\'B7\tab}O operador \b * multiplica os valores;\b0\par
{\pntext\f1\'B7\tab}O operador \b / divide os valores;\b0\par
{\pntext\f1\'B7\tab}O operador \b // calcul\'e1 divis\'e3o inteira;\b0\par
{\pntext\f1\'B7\tab}O operador \b ++ incrementa;\b0\par
{\pntext\f1\'B7\tab}O operador \b -- decrementa;\b0\par

\pard\sa200\sl276\slmult1\par
\b Estrutura de um programa e m\'e9todo principal :\par
\tab\b0 Os principais arquivos s\'e3o o \i .csproj\i0  que cont\'e9m informa\'e7\'f5es referente a um projeto (build, debug, vers\'e3o ) e o \i .sln \i0 que cont\'e9m informa\'e7\'f5es que carregam um agrupamento de projetos.\par
\par
\b Array e listas :\par
\tab\b0 Array \'e9 uma estrutura de dado que armazena valores do mesmo tipo, com um tamanho fixo. \par
}
 